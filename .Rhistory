cluster_speed <- read.csv("cluster_speedup.txt", header=F)
cluster_speed
plot(cluster_speed)
line(cluster_speed)
lines(cluster_speed)
ls
ls()
cluster_speedup <- read.csv("cluster_speedup.txt", header=F)
rm(cluster_speed)
ls()
node_speedup <- read.csv("node_speedup.txt", header=F)
node_speedup
node_speedup$V1
cluster_speedup
cluster_speed <- read.csv("cluster_speedup.txt", header=F)
plot(cluster_speedup, type="o", col="red", xaxt='n', yaxt='n' xlab="Number of processes", ylab="Speedup", main="Cluster speedup: 1000x1000 matrix multiplication", lwd=4, lty=4, pch=0, xlim=c(1,16), ylimc(1,4))
plot(cluster_speedup, type="o", col="red", xaxt='n', yaxt='n', xlab="Number of processes", ylab="Speedup", main="Cluster speedup: 1000x1000 matrix multiplication", lwd=4, lty=4, pch=0, xlim=c(1,16), ylimc(1,4))
plot(cluster_speedup, type="o", col="red", xaxt='n', yaxt='n', xlab="Number of processes", ylab="Speedup", main="Cluster speedup: 1000x1000 matrix multiplication", lwd=4, lty=4, pch=0, xlim=c(1,16), ylim=c(1,4))
cluster_speed
plot(cluster_speedup, type="o", col="red", xaxt='n', yaxt='n', xlab="Number of processes", ylab="Speedup", main="Cluster speedup: 1000x1000 matrix multiplication", lwd=4, lty=4, pch=0, xlim=c(1,16), ylim=c(1,5))
plot(cluster_speedup, type="o", col="red", xaxt='n', yaxt='n', xlab="Number of processes", ylab="Speedup", main="Cluster speedup: 1000x1000 matrix multiplication", lwd=4, lty=4, pch=0, xlim=c(1,16), ylim=c(1,5))
plot(cluster_speedup, type="o", col="red", xaxt='n', yaxt='n', xlab="Number of processes", ylab="Speedup", main="Cluster speedup: 1000x1000 matrix multiplication", lwd=4, lty=4, pch=0, xlim=c(1,16), ylim=c(1,10))
cluster_speed
cluster_speedup
rm(cluster_speed)
cluster_speedup <- read.csv("cluster_speedup.txt", header=F)
plot(cluster_speedup, type="o", col="red", xaxt='n', yaxt='n', xlab="Number of processes", ylab="Speedup", main="Cluster speedup: 1000x1000 matrix multiplication", lwd=4, lty=4, pch=0, xlim=c(1,16), ylim=c(1,5))
plot(cluster_speedup, type="o", col="red", xaxt='n', yaxt='n', xlab="Number of processes", ylab="Speedup", main="Cluster speedup: 1000x1000 matrix multiplication", lwd=4, lty=4, pch=0, xlim=c(1,16), ylim=c(1,4))
axis(2, at=seq(1,4,by=1), las=2)
axis(1, at=c(1,2,4,8,16), las=1)
plot(cluster_speedup, type="o", col="red", xaxt='n', yaxt='n', xlab="Number of processes", ylab="Speedup", main="Cluster speedup: 1000x1000 matrix multiplication", lwd=4, lty=4, pch=19, xlim=c(1,16), ylim=c(1,4))
plot(cluster_speedup, type="o", col="red", xaxt='n', yaxt='n', xlab="Number of processes", ylab="Speedup", main="Cluster speedup: 1000x1000 matrix multiplication", lwd=4, lty=1, pch=19, xlim=c(1,16), ylim=c(1,4))
plot(cluster_speedup, type="o", col="red", xaxt='n', yaxt='n', xlab="Number of processes", ylab="Speedup", main="Cluster speedup: 1000x1000 matrix multiplication", lwd=4, lty=1, pch=0, xlim=c(1,16), ylim=c(1,4))
axis(1, at=c(1,2,4,8,16), las=1)
axis(2, at=seq(1,4,by=1), las=2)
grid(10,10,col="lightgray",lty="dotted")
plot(cluster_speedup, type="o", col="darkred", xaxt='n', yaxt='n', xlab="Number of processes", ylab="Speedup", main="Cluster speedup: 1000x1000 matrix multiplication", lwd=4, lty=1, pch=0, xlim=c(1,16), ylim=c(1,4))
plot(cluster_speedup, type="o", col="firebrick3", xaxt='n', yaxt='n', xlab="Number of processes", ylab="Speedup", main="Cluster speedup: 1000x1000 matrix multiplication", lwd=4, lty=1, pch=0, xlim=c(1,16), ylim=c(1,4))
grid(10,10,col="lightgray",lty="dotted")
axis(1, at=c(1,2,4,8,16), las=1)
axis(2, at=seq(1,4,by=1), las=2)
pdf("cluster_speedup.pdf")
plot(cluster_speedup, type="o", col="firebrick3", xaxt='n', yaxt='n', xlab="Number of processes", ylab="Speedup", main="R-Pi Cluster speedup: 1000x1000 matrix multiplication", lwd=4, lty=1, pch=0, xlim=c(1,16), ylim=c(1,4))
axis(1, at=c(1,2,4,8,16), las=1)
axis(2, at=seq(1,4,by=1), las=2)
grid(10,10,col="lightgray",lty="dotted")
dev.off()
ls
plot(node_speedup, type="o", col="firebrick3", xaxt='n', yaxt='n', xlab="Number of processes", ylab="Speedup", main="R-Pi Cluster speedup: 1000x1000 matrix multiplication", lwd=4, lty=1, pch=0, xlim=c(1,16), ylim=c(1,4))
node_speedup
plot(node_speedup, type="o", col="firebrick3", xaxt='n', yaxt='n', xlab="Number of processes", ylab="Speedup", main="R-Pi Cluster speedup: 1000x1000 matrix multiplication", lwd=4, lty=1, pch=0, xlim=c(1,16), ylim=c(1,7))
axis(1, at=c(1,2,4,8,16), las=1)
axis(2, at=seq(1,4,by=1), las=2)
axis(2, at=seq(1,7,by=1), las=2)
plot(node_speedup, type="o", col="firebrick3", xaxt='n', yaxt='n', xlab="Number of processes", ylab="Speedup", main="Raspberry Pi speedup: 1000x1000 matrix multiplication", lwd=4, lty=1, pch=0, xlim=c(1,16), ylim=c(1,7))
axis(2, at=seq(1,4,by=1), las=2)
plot(node_speedup, type="o", col="firebrick3", xaxt='n', yaxt='n', xlab="Number of processes", ylab="Speedup", main="R-Pi Cluster speedup: 1000x1000 matrix multiplication", lwd=4, lty=1, pch=0, xlim=c(1,16), ylim=c(1,7))
plot(node_speedup, type="o", col="firebrick3", xaxt='n', yaxt='n', xlab="Number of processes", ylab="Speedup", main="Raspberry Pi speedup: 1000x1000 matrix multiplication", lwd=4, lty=1, pch=0, xlim=c(1,16), ylim=c(1,7))
axis(2, at=seq(1,7,by=1), las=2)
axis(1, at=c(1,2,4,8,16), las=1)
grid(10,10,col="lightgray",lty="dotted")
pdf("node_speedup.pdf)
pdf("node_speedup.pdf")
plot(node_speedup, type="o", col="firebrick3", xaxt='n', yaxt='n', xlab="Number of processes", ylab="Speedup", main="Raspberry Pi speedup: 1000x1000 matrix multiplication", lwd=4, lty=1, pch=0, xlim=c(1,16), ylim=c(1,7))
axis(2, at=seq(1,7,by=1), las=2)
axis(1, at=c(1,2,4,8,16), las=1)
grid(10,10,col="lightgray",lty="dotted")
dev.off()
cluster_data <- read.csv("cluster_data.txt", header=F)
node_data <- read.csv("node_data.txt", header=F)
plot(cluster_data, type="o", col="firebrick3", xaxt='n'. yaxt
plot(cluster_data, type="o", col="firebrick3", xaxt='n', yaxt='n', ylab="Run time (seconds)", xlab="Number of processes", lwd=4, lty=1, pch=0, xlim=c(1,16), ylim=(0,35) 
plot(cluster_data, type="o", col="firebrick3", xaxt='n', yaxt='n', ylab="Run time (seconds)", xlab="Number of processes", lwd=4, lty=1, pch=0, xlim=c(1,16), ylim=c(0,35) 
plot(cluster_data, type="o", col="firebrick3", xaxt='n', yaxt='n', ylab="Run time (seconds)", xlab="Number of processes", lwd=4, lty=1, pch=0, xlim=c(1,16), ylim=c(0,35))
lines(node_data, col="forestgreen", lwd=4, lty=1, pch=0, type="o")
axis(1, at=c(1,2,4,8,16), las=1)
axis(2, at=seq(0,35, by=1), las=2)
plot(cluster_data, type="o", col="firebrick3", xaxt='n', yaxt='n', ylab="Run time (seconds)", xlab="Number of processes", lwd=4, lty=1, pch=0, xlim=c(1,16), ylim=c(0,35))
lines(node_data, col="forestgreen", lwd=4, lty=1, pch=0, type="o")
axis(1, at=c(1,2,4,8,16), las=1)
axis(2, at=seq(0,35, by=5), las=2)
legend(10,30, c("R-Pi Cluster", "Raspberry Pi"), col=c("firebrick3", "forestgreen"), lwd=4, lty=1)
legend(10,30, c("R-Pi Cluster", "Raspberry Pi"), col=c("firebrick3", "forestgreen"), lwd=4, lty=1, pch=0)
plot(cluster_data, type="o", col="firebrick3", xaxt='n', yaxt='n', ylab="Run time (seconds)", xlab="Number of processes", lwd=4, lty=1, pch=0, xlim=c(1,16), ylim=c(0,35))
lines(node_data, col="forestgreen", lwd=4, lty=1, pch=0, type="o")
axis(1, at=c(1,2,4,8,16), las=1)
axis(2, at=seq(0,35, by=5), las=2)
legend(10,30, c("R-Pi Cluster", "Raspberry Pi"), col=c("firebrick3", "forestgreen"), lwd=4, lty=1, pch=0)
grid(10,10,col="lightgray",lty="dotted")
plot(cluster_data, type="o", col="firebrick3", xaxt='n', yaxt='n', ylab="Run time (seconds)", xlab="Number of processes", lwd=4, lty=1, pch=0, xlim=c(1,16), ylim=c(0,35), main="Run time comparison: 1000x1000 matrix multiplication")
grid(10,10,col="lightgray",lty="dotted")
legend(10,30, c("R-Pi Cluster", "Raspberry Pi"), col=c("firebrick3", "forestgreen"), lwd=4, lty=1, pch=0)
axis(1, at=c(1,2,4,8,16), las=1)
axis(2, at=seq(0,35, by=5), las=2)
lines(node_data, col="forestgreen", lwd=4, lty=1, pch=0, type="o")
plot(cluster_data, type="o", col="firebrick3", xaxt='n', yaxt='n', ylab="Run time (seconds)", xlab="Number of processes", lwd=4, lty=1, pch=0, xlim=c(1,16), ylim=c(0,35), main="Run time comparison: 1000x1000 matrix multiplication")
axis(1, at=c(1,2,4,8,16), las=1)
axis(2, at=seq(0,35, by=5), las=2)
grid(8,8,col="lightgray",lty="dotted")
grid(9,9,col="lightgray",lty="dotted")
plot(cluster_data, type="o", col="firebrick3", xaxt='n', yaxt='n', ylab="Run time (seconds)", xlab="Number of processes", lwd=4, lty=1, pch=0, xlim=c(1,16), ylim=c(0,35), main="Run time comparison: 1000x1000 matrix multiplication")
grid(10,10,col="lightgray",lty="dotted")
axis(2, at=seq(0,35, by=5), las=2)
axis(1, at=c(1,2,4,8,16), las=1)
lines(node_data, col="forestgreen", lwd=4, lty=1, pch=0, type="o")
legend(10,30, c("R-Pi Cluster", "Raspberry Pi"), col=c("firebrick3", "forestgreen"), lwd=4, lty=1, pch=0)
pdf("run-time-comparison.pdf")
plot(cluster_data, type="o", col="firebrick3", xaxt='n', yaxt='n', ylab="Run time (seconds)", xlab="Number of processes", lwd=4, lty=1, pch=0, xlim=c(1,16), ylim=c(0,35), main="Run time comparison: 1000x1000 matrix multiplication")
grid(10,10,col="lightgray",lty="dotted")
axis(2, at=seq(0,35, by=5), las=2)
axis(1, at=c(1,2,4,8,16), las=1)
lines(node_data, col="forestgreen", lwd=4, lty=1, pch=0, type="o")
legend(10,30, c("R-Pi Cluster", "Raspberry Pi"), col=c("firebrick3", "forestgreen"), lwd=4, lty=1, pch=0)
dev.off()
history()
history()
ls
quit()
ls()
hpl_gflops <- read.csv("hpl_gflops.txt", header=F)
hpl_gflops
hpl_runtime <- read.csv("hpl_run_time.txt", header=F)
hpl_runtime
barplot(hpl_runtime)
hpl_runtime <- read.csv("hpl_run_time.txt", header=F)$V1
barplot(hpl_runtime)
boxplot(hpl_runtime)
plot(hpl_gflops
)
hpl_gflops <- read.csv("hpl_gflops.txt", header=F)$V1
plot(hpl_gflops)
plot(hpl_gflops, ylim=c(0,4))
plot(hpl_gflops, ylim=c(2,4))
plot(hpl_gflops, ylim=c(3,4))
plot(hpl_gflops, ylim=c(3,4), type="o")
grid(10,10)
plot(hpl_gflops, ylim=c(3,4), type="o")
quit()
ls()
plot(hpl_gflops, ylim=c(3,4), type="o")
grid(10,10)
plot(hpl_runtime, type="o")
plot(hpl_runtime, type="o", ylim=c(1500, 1700))
plot(hpl_runtime, type="o", ylim=c(1600, 1700))
grid(10,10)
par(mfrow=c(2,1))
plot(hpl_runtime, type="o", ylim=c(1600, 1700))
plot(hpl_gflops, ylim=c(3,4), type="o")
grid(10,10)
plot(hpl_gflops, ylim=c(3,3.8), type="o")
plot(hpl_runtime, type="o", ylim=c(1600, 1700))
par(mfrow=c(2,1))
plot(hpl_gflops, ylim=c(3,3.8), type="o", xaxt='n', ylab="Gflops", main="R-Pi cluster: HPL Benchmark")
grid(10,10)
plot(hpl_runtime, type="o", ylim=c(1600, 1700), main="Run time", xaxt='n',)
grid(10,10)
par(mfrow=c(2,1))
plot(hpl_gflops, ylim=c(3,3.8), type="o", xaxt='n', ylab="Gflops", main="R-Pi cluster: HPL Benchmark", labels=FALSE)
par(mfrow=c(2,1))
par(mfrow=c(2,1))
plot(hpl_gflops, ylim=c(3,3.8), type="o", xaxt='n', ylab="Gflops", main="R-Pi cluster: HPL Benchmark", lty=1, lwd=4, col="firebrick3", pch=0)
plot(hpl_gflops, ylim=c(3,3.8), type="o", xaxt='n', ylab="Gflops", main="R-Pi cluster: HPL Benchmark", lty=1, lwd=2, col="firebrick3", pch=0)
plot(hpl_gflops, ylim=c(3.2,3.8), type="o", xaxt='n', ylab="Gflops", main="R-Pi cluster: HPL Benchmark", lty=1, lwd=4, col="firebrick3", pch=0)
plot(hpl_gflops, ylim=c(3.4,3.8), type="o", xaxt='n', ylab="Gflops", main="R-Pi cluster: HPL Benchmark", lty=1, lwd=4, col="firebrick3", pch=0)
plot(hpl_gflops, ylim=c(3.2,3.6), type="o", xaxt='n', ylab="Gflops", main="R-Pi cluster: HPL Benchmark", lty=1, lwd=4, col="firebrick3", pch=0)
plot(hpl_gflops, ylim=c(3.2,3.5), type="o", xaxt='n', ylab="Gflops", main="R-Pi cluster: HPL Benchmark", lty=1, lwd=4, col="firebrick3", pch=0)
plot(hpl_gflops, ylim=c(3.3,3.5), type="o", xaxt='n', ylab="Gflops", main="R-Pi cluster: HPL Benchmark", lty=1, lwd=4, col="firebrick3", pch=0)
grid(10,10)
dev.off()
plot(hpl_gflops, ylim=c(3.3,3.5), type="o", xaxt='n', ylab="Gflops", main="R-Pi cluster: HPL Benchmark", lty=1, lwd=4, col="firebrick3", pch=0)
plot(hpl_gflops, ylim=c(3.3,3.5), type="o", ylab="Gflops", main="R-Pi cluster: HPL Benchmark", lty=1, lwd=4, col="firebrick3", pch=0)
plot(hpl_gflops, ylim=c(3.3,3.5), type="o", ylab="Gflops", xlab="Runs", main="R-Pi cluster: HPL Benchmark", lty=1, lwd=4, col="firebrick3", pch=0)
grid(10,10)
history()
plot(hpl_gflops, ylim=c(3.4,3.5), type="o", ylab="Gflops", xlab="Runs", main="R-Pi cluster: HPL Benchmark", lty=1, lwd=4, col="firebrick3", pch=0)
grid(10,10)
par(mfrow=c(2,1))
plot(hpl_gflops, ylim=c(3.4,3.5), type="o", ylab="Gflops", xlab="Runs", main="R-Pi cluster: HPL Benchmark", lty=1, lwd=4, col="firebrick3", pch=0)
grid(10,10)
plot(hpl_runtime, type="o", ylim=c(1600, 1700), main="Run time", ylab="Run time (seconds)", lty=1, lwd=4, col="firebrick3", pch=0)
grid(10,10)
dev.off()
plot(hpl_runtime, type="o", ylim=c(1600, 1700), main="Run time", ylab="Run time (seconds)", lty=1, lwd=4, col="firebrick3", pch=0)
plot(hpl_runtime, type="o", ylim=c(1650, 1700), main="Run time", ylab="Run time (seconds)", lty=1, lwd=4, col="firebrick3", pch=0)
plot(hpl_runtime, type="o", ylim=c(1650, 1690), main="Run time", ylab="Run time (seconds)", lty=1, lwd=4, col="firebrick3", pch=0)
par(mfrow=c(2,1))
plot(hpl_gflops, ylim=c(3.4,3.5), type="o", ylab="Gflops", xlab="Runs", main="R-Pi cluster: HPL Benchmark", lty=1, lwd=4, col="firebrick3", pch=0)
grid(10,10)
plot(hpl_runtime, type="o", ylim=c(1650, 1690), main="Run time", ylab="Run time (seconds)", xlab="Runs", lty=1, lwd=4, col="firebrick3", pch=0)
grid(10,10)
history(maxshow=Inf)
source("hpl_graph.R")
source("hpl_graph.R")
source("hpl_graph.R")
source("hpl_graph.R")
source("hpl_graph.R")
source("hpl_graph.R")
source("hpl_graph.R")
source("hpl_graph.R")
source("hpl_graph.R")
source("hpl_graph.R")
source("hpl_graph.R")
source("hpl_graph.R")
source("report_graphs.R")
plot(hpl_gflops,hpl_runtime)
plot(hpl_gflops,hpl_runtime, type="o")
quit()
ls()
hpl_results <- read.csv("hpl_results.txt", header=F)
hpl_results
hpl_results <- read.csv("hpl_results.txt", header=F, sep="")
hpl_results
plot(hpl_results)
plot(hpl_results, ylab="Run time (seconds)", xlab="GFLOPS")
plot(hpl_results, xlab="Run time (seconds)", ylab="GFLOPS")
plot(hpl_results, xlab="Run time (seconds)", ylab="GFLOPS", type="o")
plot(hpl_results, xlab="Run time (seconds)", ylab="GFLOPS", type="o", lty=1, lwd=3, col="firebrick3")
grid(10,10)
boxplot(hpl_gflops)
boxplot(hpl_gflops, col="firebrick3")
boxplot(hpl_gflops, col="firebrick3", ylab="GFLOPS")
boxplot(hpl_gflops, col="firebrick3", ylab="GFLOPS", main="HPL Benchmark on R-Pi Cluster")
grid(10,10)
boxplot(hpl_gflops, col="firebrick3", ylab="GFLOPS", main="HPL Benchmark on R-Pi Cluster")
boxplot(hpl_gflops, col="firebrick3", ylab="GFLOPS", main="HPL Benchmark on R-Pi Cluster")
grid(10,10)
boxplot(hpl_gflops, col="firebrick3", ylab="GFLOPS", main="HPL Benchmark on R-Pi Cluster", add=TRUE)
source("hpl_boxplot.R")
plot(node_speedup, type="o", col="firebrick3", xaxt='n', yaxt='n', xlab="Number of processes", ylab="Speedup", main="Raspberry Pi speedup: 1000x1000 matrix multiplication", lwd=4, lty=1, pch=0, xlim=c(1,16), ylim=c(1,7))
axis(2, at=seq(1,7,by=1), las=2)
axis(1, at=c(1,2,4,8,16), las=1)
grid(10,10,col="lightgray",lty="dotted")
lines(cluster_speedup, col="dodgerblue3", type="o", lwd=4, lty=1, pch=0)
legend(1,7, c("R-Pi Cluster", "Single R-Pi"), col=c("firebrick3", "forestgreen")
)
legend(1,7, c("R-Pi Cluster", "Single R-Pi"), col=c("firebrick3", "forestgreen", lwd=4, lty=1, pch=0)
)
legend(1,7, c("R-Pi Cluster", "Single R-Pi"), col=c("firebrick3", "forestgreen"), lwd=4, lty=1, pch=0))
legend(1,7, c("R-Pi Cluster", "Single R-Pi"), col=c("firebrick3", "forestgreen"), lwd=4, lty=1, pch=0)
source("speedup_comparison.R")
source("speedup_comparison.R")
source("speedup_comparison.R")
source("speedup_comparison.R")
quit()
source("speedup_comparison.R")
quit()
